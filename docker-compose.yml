services:
  # OWASP Dependency Track - API Server
  dependency-track-apiserver:
    image: dependencytrack/apiserver:latest
    container_name: dt-apiserver
    environment:
      - ALPINE_DATABASE_MODE=external
      - ALPINE_DATABASE_URL=jdbc:postgresql://postgres:5432/dtrack
      - ALPINE_DATABASE_DRIVER=org.postgresql.Driver
      - ALPINE_DATABASE_USERNAME=dtrack
      - ALPINE_DATABASE_PASSWORD=changeme
      - ALPINE_DATABASE_POOL_ENABLED=true
      - ALPINE_DATABASE_POOL_MAX_SIZE=20
      - ALPINE_DATABASE_POOL_MIN_IDLE=10
      - ALPINE_DATABASE_POOL_IDLE_TIMEOUT=300000
      - ALPINE_DATABASE_POOL_MAX_LIFETIME=600000
      - ALPINE_SECRET_KEY_PATH=/var/run/secrets
      - ALPINE_DATA_DIRECTORY=/data
      - ALPINE_CORS_ENABLED=true
      - ALPINE_CORS_ALLOW_ORIGIN=*
      - ALPINE_CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - ALPINE_CORS_ALLOW_HEADERS=Origin,Content-Type,Authorization,X-Requested-With,Content-Length,Accept,Origin,X-Api-Key
      - ALPINE_CORS_EXPOSE_HEADERS=Content-Type,X-Api-Key
      - ALPINE_API_KEY_DEFAULT=odt_0EvOUOJftaK9PHrVIh4yL1LgbAYHLhtJ
    volumes:
      - 'dt-data:/data'
      - 'dt-tmp:/tmp'
    ports:
      - "8081:8080"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mend-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 180s

  # OWASP Dependency Track - Frontend
  dependency-track-frontend:
    image: dependencytrack/frontend:latest
    container_name: dt-frontend
    environment:
      - API_BASE_URL=http://localhost:8081
    ports:
      - "8082:8080"
    restart: unless-stopped
    depends_on:
      - dependency-track-apiserver
    networks:
      - mend-network

  # PostgreSQL Database for Dependency Track
  postgres:
    image: postgres:15-alpine
    container_name: dt-postgres
    environment:
      - POSTGRES_DB=dtrack
      - POSTGRES_USER=dtrack
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    restart: unless-stopped
    networks:
      - mend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dtrack -d dtrack"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Jenkins with automatic plugin installation using jenkins-plugin-cli
  jenkins:
    image: jenkins/jenkins:2.426.1-lts-jdk17
    container_name: jenkins
    user: root
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xmx2g -Djenkins.install.runSetupWizard=false
      - JENKINS_OPTS=--httpPort=8080
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc_configs
    volumes:
      - 'jenkins-data:/var/jenkins_home'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './jenkins/casc_configs:/var/jenkins_home/casc_configs:ro'
      - './jenkins/plugins.txt:/var/jenkins_home/plugins.txt:ro'
    ports:
      - "8080:8080"
      - "50000:50000"
    restart: unless-stopped
    networks:
      - mend-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 180s
    depends_on:
      dependency-track-apiserver:
        condition: service_healthy
    # Use jenkins-plugin-cli at runtime to avoid SSL build issues
    entrypoint: >
      bash -c '
        if [ ! -f /var/jenkins_home/plugins/.initialized ]; then
          echo "First run - installing plugins with jenkins-plugin-cli..."
          jenkins-plugin-cli --plugin-file /var/jenkins_home/plugins.txt --plugins-dir /var/jenkins_home/plugins || echo "Some plugins failed, continuing..."
          mkdir -p /var/jenkins_home/plugins && touch /var/jenkins_home/plugins/.initialized
        fi
        exec /usr/local/bin/jenkins.sh
      '

volumes:
  dt-data:
    driver: local
  dt-tmp:
    driver: local
  postgres-data:
    driver: local
  jenkins-data:
    driver: local

networks:
  mend-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16